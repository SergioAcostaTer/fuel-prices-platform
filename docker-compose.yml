version: "3.8"

services:
  kafka:
    image: bitnami/kafka:3.7
    ports:
      - "9092:9092" # Clientes desde tu host: PLAINTEXT://localhost:9092
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"

      # Listeners
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"

      # Importante: que otros contenedores vean 'kafka:9092'
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"

      # Quórum KRaft (single node)
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"

      # Factores de replicación mínimos para single-node
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR: "1"
    volumes:
      - kafka-data:/bitnami/kafka
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list >/dev/null 2>&1 || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 40

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    ports:
      - "8080:8080" # http://localhost:8080

  topic-init:
    image: bitnami/kafka:3.7
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: ["/bin/bash","-lc"]
    command: >
      kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:9092 --topic prices.raw &&
      kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:9092 --topic stations.raw &&
      kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:9092 --topic prices.dlq
    restart: "no"

volumes:
  kafka-data:
