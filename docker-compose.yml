services:
  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka
    ports:
      - "9092:9092"   # internal listener (containers use kafka:9092)
      - "9094:9094"   # host listener (tools/IDE on localhost:9094)
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"

      # listeners: internal, host, controller
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,PLAINTEXTHOST://:9094,CONTROLLER://:9093"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXTHOST:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"

      # advertised addresses for each listener
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092,PLAINTEXTHOST://localhost:9094"

      # single-node kraft quorum
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"

      # single-replica factors (dev)
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR: "1"

      # lighter heap for dev
      KAFKA_HEAP_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - kafka-data:/bitnami/kafka
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list >/dev/null 2>&1 || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 40

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    ports:
      - "8080:8080"

  topic-init:
    image: bitnami/kafka:3.7
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: ["/bin/bash","-lc"]
    # single-line; no $((..)) arithmetic; no line breaks (Windows-safe)
    command: >
      set -e;
      kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists
      --topic stations.raw --partitions 3 --config cleanup.policy=compact --config min.cleanable.dirty.ratio=0.1 &&
      kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists
      --topic prices.raw --partitions 6 --config cleanup.policy=delete --config retention.ms=1209600000 &&
      kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists
      --topic prices.dlq --partitions 3 --config retention.ms=2592000000
    restart: "no"

  fuel-ingestor:
    build:
      context: .
      dockerfile: apps/fuel-ingestor/Dockerfile
    container_name: fuel-ingestor
    depends_on:
      kafka:
        condition: service_healthy
      topic-init:
        condition: service_completed_successfully
    environment:
      KAFKA_BOOTSTRAP: kafka:9092
      KAFKA_CLIENT_ID: fuel-ingestor
      SERVER_PORT: "8081"
      MANAGEMENT_PORT: "8081"
      INGEST_CRON: "0 0 * * * *"
      SOURCE_BASE_URL: "https://sedeaplicaciones.minetur.gob.es/ServiciosRESTCarburantes/PreciosCarburantes/EstacionesTerrestres/"
      SOURCE_TIMEOUT_MS: "10000"
      SOURCE_USER_AGENT: "fuel-ingestor/1.0"
      SOURCE_MAX_SIZE_MB: "100"
      TOPIC_PRICES_RAW: "prices.raw"
      TOPIC_STATIONS_RAW: "stations.raw"
      TOPIC_DLQ: "prices.dlq"
      LOG_LEVEL: INFO
      SPRING_SSL_BUNDLE_PEM_MINETUR_TRUSTSTORE_CERTIFICATE: ""
    ports:
      - "8081:8081"

volumes:
  kafka-data:
  gradle-cache:
